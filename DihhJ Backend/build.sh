#!/bin/bash

# BULLETPROOF BUILD SCRIPT - GUARANTEED TO WORK
echo "üöÄ Starting BULLETPROOF DihhJ Backend build..."

# Set environment variables to avoid Rust compilation
export PYTHONUNBUFFERED=1
export PIP_NO_CACHE_DIR=1
export PIP_DISABLE_PIP_VERSION_CHECK=1
export CARGO_NET_OFFLINE=true

# Upgrade pip to latest
echo "‚¨ÜÔ∏è Upgrading pip..."
pip install --upgrade pip setuptools wheel

# Install dependencies with specific flags to avoid compilation
echo "üì¶ Installing bulletproof dependencies..."
pip install --no-cache-dir --only-binary=all -r requirements.txt

# Verify Python version
echo "üêç Python version:"
python --version

# Verify main.py exists and is valid
if [ -f "main.py" ]; then
    echo "‚úÖ main.py found"
else
    echo "‚ùå main.py not found!"
    exit 1
fi

# Test syntax
echo "üß™ Testing main.py syntax..."
python -m py_compile main.py
if [ $? -eq 0 ]; then
    echo "‚úÖ main.py syntax is valid"
else
    echo "‚ùå main.py has syntax errors!"
    exit 1
fi

# Verify all imports work
echo "üîç Verifying all imports..."
python -c "
import sys
print(f'Python version: {sys.version}')

try:
    import fastapi
    print(f'‚úÖ FastAPI {fastapi.__version__}')

    import uvicorn
    print(f'‚úÖ Uvicorn {uvicorn.__version__}')

    import motor
    print(f'‚úÖ Motor {motor.version}')

    import pymongo
    print(f'‚úÖ PyMongo {pymongo.version}')

    import dotenv
    print('‚úÖ python-dotenv imported')

    print('üéâ ALL DEPENDENCIES VERIFIED!')

except ImportError as e:
    print(f'‚ùå Import error: {e}')
    sys.exit(1)
"

echo "‚úÖ BULLETPROOF BUILD COMPLETED SUCCESSFULLY!"
